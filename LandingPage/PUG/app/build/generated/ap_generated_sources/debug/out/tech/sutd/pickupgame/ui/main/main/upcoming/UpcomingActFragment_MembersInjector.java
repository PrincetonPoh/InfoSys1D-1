// Generated by Dagger (https://dagger.dev).
package tech.sutd.pickupgame.ui.main.main.upcoming;

import com.bumptech.glide.RequestManager;
import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.android.support.DaggerFragment_MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;
import tech.sutd.pickupgame.viewmodels.ViewModelProviderFactory;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class UpcomingActFragment_MembersInjector implements MembersInjector<UpcomingActFragment> {
  private final Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider;

  private final Provider<ViewModelProviderFactory> providerFactoryProvider;

  private final Provider<RequestManager> requestManagerProvider;

  public UpcomingActFragment_MembersInjector(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<ViewModelProviderFactory> providerFactoryProvider,
      Provider<RequestManager> requestManagerProvider) {
    this.androidInjectorProvider = androidInjectorProvider;
    this.providerFactoryProvider = providerFactoryProvider;
    this.requestManagerProvider = requestManagerProvider;
  }

  public static MembersInjector<UpcomingActFragment> create(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<ViewModelProviderFactory> providerFactoryProvider,
      Provider<RequestManager> requestManagerProvider) {
    return new UpcomingActFragment_MembersInjector(androidInjectorProvider, providerFactoryProvider, requestManagerProvider);
  }

  @Override
  public void injectMembers(UpcomingActFragment instance) {
    DaggerFragment_MembersInjector.injectAndroidInjector(instance, androidInjectorProvider.get());
    injectProviderFactory(instance, providerFactoryProvider.get());
    injectRequestManager(instance, requestManagerProvider.get());
  }

  @InjectedFieldSignature("tech.sutd.pickupgame.ui.main.main.upcoming.UpcomingActFragment.providerFactory")
  public static void injectProviderFactory(UpcomingActFragment instance,
      ViewModelProviderFactory providerFactory) {
    instance.providerFactory = providerFactory;
  }

  @InjectedFieldSignature("tech.sutd.pickupgame.ui.main.main.upcoming.UpcomingActFragment.requestManager")
  public static void injectRequestManager(UpcomingActFragment instance,
      RequestManager requestManager) {
    instance.requestManager = requestManager;
  }
}
