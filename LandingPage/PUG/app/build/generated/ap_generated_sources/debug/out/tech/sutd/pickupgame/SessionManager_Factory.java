// Generated by Dagger (https://dagger.dev).
package tech.sutd.pickupgame;

import com.google.firebase.auth.FirebaseAuth;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SessionManager_Factory implements Factory<SessionManager> {
  private final Provider<FirebaseAuth> fAuthProvider;

  public SessionManager_Factory(Provider<FirebaseAuth> fAuthProvider) {
    this.fAuthProvider = fAuthProvider;
  }

  @Override
  public SessionManager get() {
    return newInstance(fAuthProvider.get());
  }

  public static SessionManager_Factory create(Provider<FirebaseAuth> fAuthProvider) {
    return new SessionManager_Factory(fAuthProvider);
  }

  public static SessionManager newInstance(FirebaseAuth fAuth) {
    return new SessionManager(fAuth);
  }
}
