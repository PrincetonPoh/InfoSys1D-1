// Generated by Dagger (https://dagger.dev).
package tech.sutd.pickupgame.ui.auth.gettingstarted;

import android.graphics.drawable.Drawable;
import com.bumptech.glide.RequestManager;
import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.android.support.DaggerFragment_MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GetStartedFragment_MembersInjector implements MembersInjector<GetStartedFragment> {
  private final Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider;

  private final Provider<Drawable> logoProvider;

  private final Provider<RequestManager> requestManagerProvider;

  public GetStartedFragment_MembersInjector(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<Drawable> logoProvider, Provider<RequestManager> requestManagerProvider) {
    this.androidInjectorProvider = androidInjectorProvider;
    this.logoProvider = logoProvider;
    this.requestManagerProvider = requestManagerProvider;
  }

  public static MembersInjector<GetStartedFragment> create(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<Drawable> logoProvider, Provider<RequestManager> requestManagerProvider) {
    return new GetStartedFragment_MembersInjector(androidInjectorProvider, logoProvider, requestManagerProvider);
  }

  @Override
  public void injectMembers(GetStartedFragment instance) {
    DaggerFragment_MembersInjector.injectAndroidInjector(instance, androidInjectorProvider.get());
    injectLogo(instance, logoProvider.get());
    injectRequestManager(instance, requestManagerProvider.get());
  }

  @InjectedFieldSignature("tech.sutd.pickupgame.ui.auth.gettingstarted.GetStartedFragment.logo")
  public static void injectLogo(GetStartedFragment instance, Drawable logo) {
    instance.logo = logo;
  }

  @InjectedFieldSignature("tech.sutd.pickupgame.ui.auth.gettingstarted.GetStartedFragment.requestManager")
  public static void injectRequestManager(GetStartedFragment instance,
      RequestManager requestManager) {
    instance.requestManager = requestManager;
  }
}
