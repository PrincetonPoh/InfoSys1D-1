// Generated by Dagger (https://dagger.dev).
package tech.sutd.pickupgame.ui.auth;

import android.app.Application;
import com.google.firebase.database.DatabaseReference;
import dagger.internal.Factory;
import javax.inject.Provider;
import tech.sutd.pickupgame.SessionManager;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class UserViewModel_Factory implements Factory<UserViewModel> {
  private final Provider<Application> applicationProvider;

  private final Provider<SessionManager> sessionManagerProvider;

  private final Provider<DatabaseReference> reffProvider;

  public UserViewModel_Factory(Provider<Application> applicationProvider,
      Provider<SessionManager> sessionManagerProvider, Provider<DatabaseReference> reffProvider) {
    this.applicationProvider = applicationProvider;
    this.sessionManagerProvider = sessionManagerProvider;
    this.reffProvider = reffProvider;
  }

  @Override
  public UserViewModel get() {
    return newInstance(applicationProvider.get(), sessionManagerProvider.get(), reffProvider.get());
  }

  public static UserViewModel_Factory create(Provider<Application> applicationProvider,
      Provider<SessionManager> sessionManagerProvider, Provider<DatabaseReference> reffProvider) {
    return new UserViewModel_Factory(applicationProvider, sessionManagerProvider, reffProvider);
  }

  public static UserViewModel newInstance(Application application, SessionManager sessionManager,
      DatabaseReference reff) {
    return new UserViewModel(application, sessionManager, reff);
  }
}
