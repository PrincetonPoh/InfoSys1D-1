// Generated by Dagger (https://dagger.dev).
package tech.sutd.pickupgame.ui.auth;

import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.android.support.DaggerAppCompatActivity_MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;
import tech.sutd.pickupgame.SessionManager;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AuthActivity_MembersInjector implements MembersInjector<AuthActivity> {
  private final Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider;

  private final Provider<SessionManager> sessionManagerProvider;

  public AuthActivity_MembersInjector(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<SessionManager> sessionManagerProvider) {
    this.androidInjectorProvider = androidInjectorProvider;
    this.sessionManagerProvider = sessionManagerProvider;
  }

  public static MembersInjector<AuthActivity> create(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<SessionManager> sessionManagerProvider) {
    return new AuthActivity_MembersInjector(androidInjectorProvider, sessionManagerProvider);
  }

  @Override
  public void injectMembers(AuthActivity instance) {
    DaggerAppCompatActivity_MembersInjector.injectAndroidInjector(instance, androidInjectorProvider.get());
    injectSessionManager(instance, sessionManagerProvider.get());
  }

  @InjectedFieldSignature("tech.sutd.pickupgame.ui.auth.AuthActivity.sessionManager")
  public static void injectSessionManager(AuthActivity instance, SessionManager sessionManager) {
    instance.sessionManager = sessionManager;
  }
}
