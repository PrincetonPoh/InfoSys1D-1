// Generated by Dagger (https://dagger.dev).
package tech.sutd.pickupgame.ui.auth.register;

import com.google.firebase.auth.FirebaseAuth;
import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.android.support.DaggerFragment_MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;
import tech.sutd.pickupgame.viewmodels.ViewModelProviderFactory;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RegisterFragment_MembersInjector implements MembersInjector<RegisterFragment> {
  private final Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider;

  private final Provider<FirebaseAuth> fAuthProvider;

  private final Provider<ViewModelProviderFactory> providerFactoryProvider;

  public RegisterFragment_MembersInjector(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<FirebaseAuth> fAuthProvider,
      Provider<ViewModelProviderFactory> providerFactoryProvider) {
    this.androidInjectorProvider = androidInjectorProvider;
    this.fAuthProvider = fAuthProvider;
    this.providerFactoryProvider = providerFactoryProvider;
  }

  public static MembersInjector<RegisterFragment> create(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<FirebaseAuth> fAuthProvider,
      Provider<ViewModelProviderFactory> providerFactoryProvider) {
    return new RegisterFragment_MembersInjector(androidInjectorProvider, fAuthProvider, providerFactoryProvider);
  }

  @Override
  public void injectMembers(RegisterFragment instance) {
    DaggerFragment_MembersInjector.injectAndroidInjector(instance, androidInjectorProvider.get());
    injectFAuth(instance, fAuthProvider.get());
    injectProviderFactory(instance, providerFactoryProvider.get());
  }

  @InjectedFieldSignature("tech.sutd.pickupgame.ui.auth.register.RegisterFragment.fAuth")
  public static void injectFAuth(RegisterFragment instance, FirebaseAuth fAuth) {
    instance.fAuth = fAuth;
  }

  @InjectedFieldSignature("tech.sutd.pickupgame.ui.auth.register.RegisterFragment.providerFactory")
  public static void injectProviderFactory(RegisterFragment instance,
      ViewModelProviderFactory providerFactory) {
    instance.providerFactory = providerFactory;
  }
}
