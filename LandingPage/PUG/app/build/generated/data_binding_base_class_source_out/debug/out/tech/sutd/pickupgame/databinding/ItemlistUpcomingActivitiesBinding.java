// Generated by view binder compiler. Do not edit!
package tech.sutd.pickupgame.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import tech.sutd.pickupgame.R;

public final class ItemlistUpcomingActivitiesBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ShapeableImageView clockImg;

  @NonNull
  public final TextView location;

  @NonNull
  public final ShapeableImageView locationImg;

  @NonNull
  public final TextView organizer;

  @NonNull
  public final ShapeableImageView organizerImg;

  @NonNull
  public final TextView sport;

  @NonNull
  public final ShapeableImageView sportImg;

  @NonNull
  public final TextView time;

  private ItemlistUpcomingActivitiesBinding(@NonNull ConstraintLayout rootView,
      @NonNull ShapeableImageView clockImg, @NonNull TextView location,
      @NonNull ShapeableImageView locationImg, @NonNull TextView organizer,
      @NonNull ShapeableImageView organizerImg, @NonNull TextView sport,
      @NonNull ShapeableImageView sportImg, @NonNull TextView time) {
    this.rootView = rootView;
    this.clockImg = clockImg;
    this.location = location;
    this.locationImg = locationImg;
    this.organizer = organizer;
    this.organizerImg = organizerImg;
    this.sport = sport;
    this.sportImg = sportImg;
    this.time = time;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemlistUpcomingActivitiesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemlistUpcomingActivitiesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.itemlist_upcoming_activities, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemlistUpcomingActivitiesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.clock_img;
      ShapeableImageView clockImg = rootView.findViewById(id);
      if (clockImg == null) {
        break missingId;
      }

      id = R.id.location;
      TextView location = rootView.findViewById(id);
      if (location == null) {
        break missingId;
      }

      id = R.id.location_img;
      ShapeableImageView locationImg = rootView.findViewById(id);
      if (locationImg == null) {
        break missingId;
      }

      id = R.id.organizer;
      TextView organizer = rootView.findViewById(id);
      if (organizer == null) {
        break missingId;
      }

      id = R.id.organizer_img;
      ShapeableImageView organizerImg = rootView.findViewById(id);
      if (organizerImg == null) {
        break missingId;
      }

      id = R.id.sport;
      TextView sport = rootView.findViewById(id);
      if (sport == null) {
        break missingId;
      }

      id = R.id.sport_img;
      ShapeableImageView sportImg = rootView.findViewById(id);
      if (sportImg == null) {
        break missingId;
      }

      id = R.id.time;
      TextView time = rootView.findViewById(id);
      if (time == null) {
        break missingId;
      }

      return new ItemlistUpcomingActivitiesBinding((ConstraintLayout) rootView, clockImg, location,
          locationImg, organizer, organizerImg, sport, sportImg, time);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
