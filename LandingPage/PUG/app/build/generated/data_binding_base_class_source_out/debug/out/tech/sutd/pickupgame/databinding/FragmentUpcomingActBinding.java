// Generated by view binder compiler. Do not edit!
package tech.sutd.pickupgame.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import tech.sutd.pickupgame.R;

public final class FragmentUpcomingActBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final RecyclerView eventsRc;

  @NonNull
  public final RecyclerView pastRc;

  @NonNull
  public final MaterialTextView textView;

  @NonNull
  public final RecyclerView upcomingRc;

  private FragmentUpcomingActBinding(@NonNull ScrollView rootView, @NonNull RecyclerView eventsRc,
      @NonNull RecyclerView pastRc, @NonNull MaterialTextView textView,
      @NonNull RecyclerView upcomingRc) {
    this.rootView = rootView;
    this.eventsRc = eventsRc;
    this.pastRc = pastRc;
    this.textView = textView;
    this.upcomingRc = upcomingRc;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentUpcomingActBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentUpcomingActBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_upcoming_act, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentUpcomingActBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.events_rc;
      RecyclerView eventsRc = rootView.findViewById(id);
      if (eventsRc == null) {
        break missingId;
      }

      id = R.id.past_rc;
      RecyclerView pastRc = rootView.findViewById(id);
      if (pastRc == null) {
        break missingId;
      }

      id = R.id.textView;
      MaterialTextView textView = rootView.findViewById(id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.upcoming_rc;
      RecyclerView upcomingRc = rootView.findViewById(id);
      if (upcomingRc == null) {
        break missingId;
      }

      return new FragmentUpcomingActBinding((ScrollView) rootView, eventsRc, pastRc, textView,
          upcomingRc);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
